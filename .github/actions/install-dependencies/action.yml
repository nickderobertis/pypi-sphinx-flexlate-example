name: Install Python Dependencies
description: "Installs Python dependencies for the project."
inputs:
  python-version:
    required: true
    description: "The Python version to install dependencies for."

runs:
  using: composite
  steps:
    - name: Install System Dependencies
      shell: bash
      run: |
        pipx install pipenv
        # TODO: Not sure why PyYAML install is required, but was getting import yaml error
        # This is despite this dependency getting installed on other systems.
        pip install multivenv PyYAML
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: pipenv
    - id: get-requirements-path
      shell: bash
      run: |
        reqs_file=$(python reqs_path.py)
        global_reqs_file=$(python reqs_path.py global)
        echo "::set-output name=requirements-path::$reqs_file"
        echo "::set-output name=global-requirements-path::$global_reqs_file"
    - uses: actions/cache@v3
      name: Cache global dependencies
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles(steps.get-requirements-path.outputs.global-requirements-path) }}
    - uses: actions/cache@v3
      id: cache-venvs
      name: Cache venvs
      with:
        path: venvs
        key: ${{ env.pythonLocation }}-venvs-${{ hashFiles(steps.get-requirements-path.outputs.requirements-path) }}
    - name: Install main dependencies
      shell: bash
      run: |
        pipenv --python ${{ matrix.python-version }} sync
    - name: Install global dependencies
      shell: bash
      run: |
        mvenv sync global
    - name: Create venvs
      shell: bash
      if: steps.cache-venvs.outputs.cache-hit != 'true'
      run: |
        pipenv run nox -s venv -- create lint
